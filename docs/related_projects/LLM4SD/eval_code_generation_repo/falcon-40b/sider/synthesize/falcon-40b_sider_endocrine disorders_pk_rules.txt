
def rule6_rotatable_bonds(mol):
    return rdMolDescriptors.CalcNumRotatableBonds(mol)

def rule7_aromatic_rings(mol):
    return rdMolDescriptors.CalcNumAromaticRings(mol)

def rule8_heteroatoms(mol):
    return rdMolDescriptors.CalcNumHeteroatoms(mol)

def rule9_chiral_centers(mol):
    return rdMolDescriptors.CalcNumAtomStereoCenters(mol)


def rule10_stereocenters(mol):
    return rdMolDescriptors.CalcNumAtomStereoCenters(mol)


def rule11_halogens(mol):
    # Calculate the total number of halogens
    num_halogens = sum(1 for atom in mol.GetAtoms() if atom.GetAtomicNum() in [9, 17, 35, 53, 85])
    return num_halogens


def rule12_nitrogen_atoms(mol):
    return mol.GetTotalNumHs()

def rule12_nitrogen_atoms(mol):
    return len([atom for atom in mol.GetAtoms() if atom.GetAtomicNum() == 7])


def rule13_sulfur_atoms(mol):
    return len([atom for atom in mol.GetAtoms() if atom.GetAtomicNum() == 16])


def rule15_num_carbon_atoms(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmiles('C')))

def rule16_num_double_bonds(mol):
    return len([bond for bond in mol.GetBonds() if bond.GetBondType() == Chem.rdchem.BondType.DOUBLE])

def rule17_num_triple_bonds(mol):
    return len([bond for bond in mol.GetBonds() if bond.GetBondType() == Chem.rdchem.BondType.TRIPLE])

def rule18_num_quaternary_carbons(mol):
    return len([atom for atom in mol.GetAtoms() if atom.GetAtomicNum() == 6 and atom.GetDegree() == 4])

def rule19_num_amines(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmiles('N')))

def rule20_num_carboxylic_acids(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('C(=O)O')))
