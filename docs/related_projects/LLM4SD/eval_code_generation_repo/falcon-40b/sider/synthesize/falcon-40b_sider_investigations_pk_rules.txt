
def rule6_aromatic_rings(mol):
    return rdMolDescriptors.CalcNumAromaticRings(mol)

def rule7_nitrogen_atoms(mol):
    nitrogen_pattern = Chem.MolFromSmiles('N')
    return len(mol.GetSubstructMatches(nitrogen_pattern))


def rule8_sulfur_atoms(mol):
    return mol.GetNumAtoms(16)


def rule9_oxygen_atoms(mol):
    oxygen_atoms = len([atom for atom in mol.GetAtoms() if atom.GetSymbol() == 'O'])
    return oxygen_atoms


def rule10_halogen_atoms(mol):
    halogen_atoms = [atom for atom in mol.GetAtoms() if atom.GetAtomicNum() in [9, 17, 35, 53, 85, 117]]
    return len(halogen_atoms)


def rule11_heteroatoms(mol):
    return rdMolDescriptors.CalcNumHeteroatoms(mol)

def rule12_chiral_centers(mol):
    chiral_centers = 0
    for atom in mol.GetAtoms():
        if atom.GetChiralTag() != rdkit.Chem.rdchem.ChiralType.CHI_UNSPECIFIED:
            chiral_centers += 1
    return chiral_centers


def rule13_stereocenters(mol):
    if isinstance(mol, str):
        mol = Chem.MolFromSmiles(mol)
    return len(mol.GetStereoGroups())


def rule15_num_triple_bonds(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('[#6]#*')))


def rule16_num_quaternary_carbon(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('[Cv4]')))

def rule17_num_amine_groups(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('[NX3;H2,H1;!$(NC=O)]')))

def rule18_num_carboxylic_acid_groups(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('C(=O)[O;h1]')))

def rule19_num_sulfonic_acid_groups(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('S(=O)(=O)[O;h1]')))

def rule20_num_phosphoric_acid_groups(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('P(=O)(O)(O)')))
