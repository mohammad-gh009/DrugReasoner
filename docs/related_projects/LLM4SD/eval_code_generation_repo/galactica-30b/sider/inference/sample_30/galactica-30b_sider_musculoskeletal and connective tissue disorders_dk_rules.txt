def rule1_contains_sulfonamide_or_nitro(mol):
    sulfonamide_pattern = Chem.MolFromSmarts('S(=O)(=O)N')
    nitro_pattern = Chem.MolFromSmarts('N(=O)=O')
    return mol.HasSubstructMatch(sulfonamide_pattern) or mol.HasSubstructMatch(nitro_pattern)

def rule2_contains_sulfonyl_sulfonamide_or_nitro(mol):
    sulfonyl_pattern = Chem.MolFromSmarts('S(=O)(=O)')
    return rule1_contains_sulfonamide_or_nitro(mol) or mol.HasSubstructMatch(sulfonyl_pattern)

def rule3_contains_sulfonamide_or_nitro_linked_to_aromatic(mol):
    sulfonamide_pattern = Chem.MolFromSmarts('cS(=O)(=O)N')
    nitro_pattern = Chem.MolFromSmarts('cN(=O)=O')
    return mol.HasSubstructMatch(sulfonamide_pattern) or mol.HasSubstructMatch(nitro_pattern)

def rule4_contains_halogen_attached_to_carbon(mol):
    halogen_pattern = Chem.MolFromSmarts('C[F,Cl,Br,I]')
    return mol.HasSubstructMatch(halogen_pattern)

def rule5_contains_conjugated_double_bonds(mol):
    conjugated_double_bonds_pattern = Chem.MolFromSmarts('C=C-C=C')
    return mol.HasSubstructMatch(conjugated_double_bonds_pattern)

def rule6_contains_pyridine_and_carbonyl(mol):
    pyridine_pattern = Chem.MolFromSmarts('c1ncccc1')
    carbonyl_pattern = Chem.MolFromSmarts('C=O')
    return mol.HasSubstructMatch(pyridine_pattern) and mol.HasSubstructMatch(carbonyl_pattern)

def rule7_contains_bromine_or_carbonyl(mol):
    bromine_pattern = Chem.MolFromSmarts('Br')
    carbonyl_pattern = Chem.MolFromSmarts('C=O')
    return mol.HasSubstructMatch(bromine_pattern) or mol.HasSubstructMatch(carbonyl_pattern)

def rule8_contains_sulfhydryl(mol):
    sulfhydryl_pattern = Chem.MolFromSmarts('S')
    return mol.HasSubstructMatch(sulfhydryl_pattern)

def rule10_cyano_group(mol):
    cyano_pattern = Chem.MolFromSmarts('[#6]#[#7]')
    return len(mol.GetSubstructMatches(cyano_pattern))

def rule11_sulfonyl_phosphate_group(mol):
    sulfonyl_pattern = Chem.MolFromSmarts('S(=O)(=O)')
    phosphate_pattern = Chem.MolFromSmarts('P(=O)(-O)(-O)(-O)')
    return len(mol.GetSubstructMatches(sulfonyl_pattern)) + len(mol.GetSubstructMatches(phosphate_pattern))

def rule12_sulfonamide_nitro_group(mol):
    sulfonamide_pattern = Chem.MolFromSmarts('S(=O)(=O)-N')
    nitro_pattern = Chem.MolFromSmarts('[N+](=O)[O-]')
    return len(mol.GetSubstructMatches(sulfonamide_pattern)) + len(mol.GetSubstructMatches(nitro_pattern))

def rule13_sulfonamide_magnesium(mol):
    sulfonamide_pattern = Chem.MolFromSmarts('S(=O)(=O)-N')
    magnesium_pattern = Chem.MolFromSmarts('[Mg]')
    return len(mol.GetSubstructMatches(sulfonamide_pattern)) + len(mol.GetSubstructMatches(magnesium_pattern))

def rule14_sulfonamide_nitro_carbonyl(mol):
    sulfonamide_pattern = Chem.MolFromSmarts('S(=O)(=O)-N')
    nitro_pattern = Chem.MolFromSmarts('[N+](=O)[O-]')
    carbonyl_pattern = Chem.MolFromSmarts('C=O')
    return len(mol.GetSubstructMatches(sulfonamide_pattern)) + len(mol.GetSubstructMatches(nitro_pattern)) + len(mol.GetSubstructMatches(carbonyl_pattern))

def rule15_sulfonamide_thiadiazole_pyridine_carbonyl(mol):
    sulfonamide_pattern = Chem.MolFromSmarts('S(=O)(=O)-N')
    thiadiazole_pattern = Chem.MolFromSmarts('c1nscn1')
    pyridine_pattern = Chem.MolFromSmarts('c1ccncc1')
    carbonyl_pattern = Chem.MolFromSmarts('C=O')
    return len(mol.GetSubstructMatches(sulfonamide_pattern)) + len(mol.GetSubstructMatches(thiadiazole_pattern)) + len(mol.GetSubstructMatches(pyridine_pattern)) + len(mol.GetSubstructMatches(carbonyl_pattern))

def rule16_sulfonamide_nitro_chlorine_phenyl(mol):
    sulfonamide_pattern = Chem.MolFromSmarts('S(=O)(=O)-N')
    nitro_pattern = Chem.MolFromSmarts('[N+](=O)[O-]')
    chlorine_phenyl_pattern = Chem.MolFromSmarts('c1cc(Cl)ccc1')
