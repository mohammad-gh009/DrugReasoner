def rule1_logP(mol):
    return Descriptors.MolLogP(mol)

def rule2_hb_donors(mol):
    return rdMolDescriptors.CalcNumHBD(mol)

def rule3_hb_acceptors(mol):
    return rdMolDescriptors.CalcNumHBA(mol)

def rule4_mol_weight(mol):
    return Descriptors.MolWt(mol)

def rule5_psa(mol):
    return rdMolDescriptors.CalcTPSA(mol)

def rule6_aromatic_rings(mol):
    return rdMolDescriptors.CalcNumAromaticRings(mol)

def rule7_sulfur_atoms(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmiles('S')))

def rule8_chlorine_atoms(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmiles('Cl')))

def rule9_fluorine_atoms(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmiles('F')))

def rule10_bromine_atoms(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmiles('Br')))

def rule11_iodine_atoms(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmiles('I')))

def rule12_hydroxyl_groups(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmiles('O')))

def rule13_carbonyl_groups(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmiles('C=O')))

def rule15_ester_groups(mol):
    ester_smarts = '[#6][#8](=[#8])[#6]'
    ester = Chem.MolFromSmarts(ester_smarts)
    return len(mol.GetSubstructMatches(ester))

def rule16_alcohol_groups(mol):
    alcohol_smarts = '[#8]([#1])-[#6]'
    alcohol = Chem.MolFromSmarts(alcohol_smarts)
    return len(mol.GetSubstructMatches(alcohol))

def rule17_amino_groups(mol):
    amino_smarts = '[#7]([#1])-[#6]'
    amino = Chem.MolFromSmarts(amino_smarts)
    return len(mol.GetSubstructMatches(amino))

def rule18_thiol_groups(mol):
    thiol_smarts = '[#16]([#1])-[#6]'
    thiol = Chem.MolFromSmarts(thiol_smarts)
    return len(mol.GetSubstructMatches(thiol))

def rule19_carboxylic_acid_groups(mol):
    carboxylic_acid_smarts = '[#6](=[#8])-[#8]([#1])'
    carboxylic_acid = Chem.MolFromSmarts(carboxylic_acid_smarts)
    return len(mol.GetSubstructMatches(carboxylic_acid))

def rule20_nitro_groups(mol):
    nitro_smarts = '[#7]([#8])(=[#8])'
    nitro = Chem.MolFromSmarts(nitro_smarts)
    return len(mol.GetSubstructMatches(nitro))
