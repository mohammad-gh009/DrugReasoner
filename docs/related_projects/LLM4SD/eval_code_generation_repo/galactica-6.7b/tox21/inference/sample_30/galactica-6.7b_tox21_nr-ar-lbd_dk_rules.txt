def rule1_halogen_presence(mol):
    halogens = ['Cl', 'Br', 'I']
    atoms = mol.GetAtoms()
    for atom in atoms:
        if atom.GetSymbol() in halogens:
            return 1
    return 0

def rule2_nitro_group_presence(mol):
    nitro_pattern = Chem.MolFromSmarts('[N+](=O)[O-]')
    return mol.HasSubstructMatch(nitro_pattern)

def rule3_carbonyl_group_presence(mol):
    carbonyl_pattern = Chem.MolFromSmarts('C=O')
    return mol.HasSubstructMatch(carbonyl_pattern)

def rule4_nitrogen_presence(mol):
    nitrogen_pattern = Chem.MolFromSmarts('[n]')
    return mol.HasSubstructMatch(nitrogen_pattern)

def rule5_double_bond_presence(mol):
    double_bond_pattern = Chem.MolFromSmarts('C=C')
    return mol.HasSubstructMatch(double_bond_pattern)

def rule6_ring_structure_presence(mol):
    return mol.GetRingInfo().NumRings()

def rule7_nitrite_nitrate_presence(mol):
    nitrite_pattern = Chem.MolFromSmarts('N=O')
    nitrate_pattern = Chem.MolFromSmarts('N(=O)(=O)')
    return mol.HasSubstructMatch(nitrite_pattern) or mol.HasSubstructMatch(nitrate_pattern)

def rule8_carbonyl_group_presence(mol):
    carbonyl_pattern = Chem.MolFromSmarts('C=O')
    return mol.HasSubstructMatch(carbonyl_pattern)

def rule9_halogen_presence(mol):
    halogens = ['Cl', 'Br']
    atoms = mol.GetAtoms()
    for atom in atoms:
        if atom.GetSymbol() in halogens:
            return 1

def rule3_contains_nitro_group(mol):
    nitro_pattern = Chem.MolFromSmarts('[N+](=O)[O-]')
    return len(mol.GetSubstructMatches(nitro_pattern))

def rule4_contains_halogen(mol):
    halogen_pattern = Chem.MolFromSmarts('[F,Cl,Br,I]')
    return len(mol.GetSubstructMatches(halogen_pattern))

def rule5_nitro_toxicity(mol):
    nitro_pattern = Chem.MolFromSmarts('[N+](=O)[O-]')
    return len(mol.GetSubstructMatches(nitro_pattern))

def rule6_halogen_toxicity(mol):
    halogen_pattern = Chem.MolFromSmarts('[F,Cl,Br,I]')
    return len(mol.GetSubstructMatches(halogen_pattern))

def rule7_carbonyl_toxicity(mol):
    carbonyl_pattern = Chem.MolFromSmarts('[C]=[O]')
    return len(mol.GetSubstructMatches(carbonyl_pattern))

def rule8_halogen_toxicity(mol):
    halogen_pattern = Chem.MolFromSmarts('[F,Cl,Br,I]')
    return len(mol.GetSubstructMatches(halogen_pattern))

def rule9_carbonyl_toxicity(mol):
    carbonyl_pattern = Chem.MolFromSmarts('[C]=[O]')
    return len(mol.GetSubstructMatches(carbonyl_pattern))

def rule10_sulfur_toxicity(mol):
    sulfur_pattern = Chem.MolFromSmarts('[S]')
    return len(mol.GetSubstructMatches(sulfur_pattern))

def rule11_chlorine_toxicity(mol):
    chlorine_pattern = Chem.MolFromSmarts('[Cl]')
