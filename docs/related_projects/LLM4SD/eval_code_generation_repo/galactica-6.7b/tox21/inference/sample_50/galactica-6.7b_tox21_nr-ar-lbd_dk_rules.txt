def rule1_carbonyl_group(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('[#6]=[#8]')))

def rule2_chlorine_atom(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('[#17]')))

def rule3_nitro_group(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('[N+](=O)[O-]')))

def rule4_halogen_atom(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('[#9,#17,#35,#53]')))

def rule5_nitrogen_lonepair(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('[n;H1]')))

def rule6_nitro_group(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('[N+](=O)[O-]')))

def rule7_sulfur_atom(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('[#16]')))

def rule8_double_bond(mol):
    return len(mol.GetSubstructMatches(Chem.MolFromSmarts('[#6]=[#6]')))

def rule10_chlorine_presence(mol):
    return sum(1 for atom in mol.GetAtoms() if atom.GetSymbol() == 'Cl')

def rule11_halogen_presence(mol):
    return sum(1 for atom in mol.GetAtoms() if atom.GetSymbol() in ['F', 'Cl', 'Br', 'I'])

def rule1_halogen_presence(mol):
    return sum(1 for atom in mol.GetAtoms() if atom.GetSymbol() in ['F', 'Cl', 'Br', 'I'])

def rule2_nitro_group_presence(mol):
    return sum(1 for atom in mol.GetAtoms() if atom.GetSymbol() == 'N' and atom.GetTotalNumHs() == 2)

def rule3_carbonyl_group_presence(mol):
    return sum(1 for atom in mol.GetAtoms() if atom.GetSymbol() == 'C' and atom.GetTotalNumHs() == 1 and atom.GetTotalDegree() == 3)

def rule1_halogen_presence(mol):
    return sum(1 for atom in mol.GetAtoms() if atom.GetSymbol() in ['F', 'Cl', 'Br'])

def rule2_carbonyl_group_presence(mol):
    return sum(1 for atom in mol.GetAtoms() if atom.GetSymbol() == 'C' and atom.GetTotalNumHs() == 1 and atom.GetTotalDegree() == 3)

def rule3_nitrogen_presence(mol):
    return sum(1 for atom in mol.GetAtoms() if atom.GetSymbol() == 'N')

def rule5_contains_nitro_group(mol):
    nitro_pattern = Chem.MolFromSmarts('[N+](=O)[O-]')
    return len(mol.GetSubstructMatches(nitro_pattern))

def rule6_contains_nitro_group(mol):
    nitro_pattern = Chem.MolFromSmarts('[N+](=O)[O-]')
    return len(mol.GetSubstructMatches(nitro_pattern))

def rule7_contains_carbonyl_group(mol):
    carbonyl_pattern = Chem.MolFromSmarts('C=O')
    return len(mol.GetSubstructMatches(carbonyl_pattern))

def rule8_contains_nitro_group(mol):
    nitro_pattern = Chem.MolFromSmarts('[N+](=O)[O-]')
    return len(mol.GetSubstructMatches(nitro_pattern))

def rule9_contains_carbonyl_group(mol):
    carbonyl_pattern = Chem.MolFromSmarts('C=O')
    return len(mol.GetSubstructMatches(carbonyl_pattern))

def rule10_contains_halogen_atom(mol):
    halogen_pattern = Chem.MolFromSmarts('[Cl,Br,I]')
    return len(mol.GetSubstructMatches(halogen_pattern))

def rule11_contains_halogen_atom(mol):
    halogen_pattern = Chem.MolFromSmarts('[Cl,Br,I]')
    return len(mol.GetSubstructMatches(halogen_pattern))

def rule12_contains_bromine_atom(mol):
    bromine_pattern = Chem.MolFromSmarts('Br')
    return len(mol.GetSubstructMatches(bromine_pattern))

def rule13_contains_chlorine_atom(mol):
    chlorine_pattern = Chem.MolFromSmarts('Cl')
